import java.util.Scanner;

public class MinDeletionsPalindrome {
    public static int minDeletionsToPalindrome(String str) {
        
        String reversedStr = new StringBuilder(str).reverse().toString();
        int n = str.length();
        
        int[][] dp = new int[n + 1][n + 1];
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                if (str.charAt(i - 1) == reversedStr.charAt(j - 1)) {
                    dp[i][j] = 1 + dp[i - 1][j - 1];
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }
        

        return n - dp[n][n];
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();

        System.out.println("Minimum deletions to make the string palindrome: " + minDeletionsToPalindrome(input));

        scanner.close();
    }
}