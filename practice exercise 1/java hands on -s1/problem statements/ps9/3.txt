import java.util.Stack;

public class ExpressionEvaluator {
    
    // Function to evaluate the expression
    public static double evaluateExpression(String expression) {
        Stack<Double> stack = new Stack<>();

        for (int i = 0; i < expression.length(); i++) {
            char ch = expression.charAt(i);
            
            if (Character.isDigit(ch)) {
                stack.push((double)(ch - '0'));
            } else {
                double operand2 = stack.pop();
                double operand1 = stack.pop();
                
                switch(ch) {
                    case '+':
                        stack.push(operand1 + operand2);
                        break;
                    case '-':
                        stack.push(operand1 - operand2);
                        break;
                    case '*':
                        stack.push(operand1 * operand2);
                        break;
                    case '/':
                        stack.push(operand1 / operand2);
                        break;
                    case '^':
                        stack.push(Math.pow(operand1, operand2));
                        break;
                    default:
                        throw new IllegalArgumentException("Invalid operator");
                }
            }
        }
        
        return stack.pop();
    }

    public static void main(String[] args) {
        String expression = "10 + 2 ^ * 6";
        double result = evaluateExpression(expression);
        System.out.println("Output: " + result);
    }
}
